{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Getting Started","text":"<p>This is a data finder integration to retrieve local (or remote) fuel price data for Home Assistant using the <code>pyfuelprices</code> library. This library aims to provide the most extensive set of data sources for fuel prices in the world.</p> <p>You can use this service to:</p> <ul> <li>Track fuel prices in your local area</li> <li>Query for fuel prices in an automation</li> <li>Calculate how much it will cost to fill your tank of fuel</li> <li>Find the cheapest station near a entity providing latitude and longitude (script required)</li> </ul>"},{"location":"#warnings","title":"Warnings","text":"<ul> <li>Commercial usage of this integration and its Python library is strictly prohibited.</li> <li>You may fork and modify as you require or contribute to the project freely.</li> </ul>"},{"location":"installation/","title":"Installation","text":"<ol> <li>Add the repository to HACS</li> <li>Install integration</li> <li>Follow prompts to configure integration</li> </ol>"},{"location":"installation/#configuration-parameters","title":"Configuration Parameters","text":"<p>The main configuration entry point is provided via a configuration flow. Using a <code>configuration.yaml</code> file to configure is not supported and will not be added in the future following Home Assistant's own design principles</p>"},{"location":"installation/#area-configuration-options","title":"Area Configuration Options","text":"Option Description Type Default <code>name</code> (Required) The name of the area. Text None <code>radius</code> (Required) The radius of the area in miles. Number (miles) 5.0 <code>latitude</code> (Required, with <code>longitude</code>) The latitude of the center of the area. Must be used with <code>longitude</code>. Latitude None <code>longitude</code> (Required, with <code>latitude</code>) The longitude of the center of the area. Must be used with <code>latitude</code>. Longitude None <code>cheapest_sensors</code> (Optional) A boolean value to determine whether cheapest sensors should be created for this area. Flag False <code>cheapest_sensors_count</code> (Required, with <code>cheapest_sensors</code>) The number of cheapest sensors to create. Only used if <code>cheapest_sensors</code> is true. Number (Min: 1, Max: 10, Step: 1) 5 <code>cheapest_sensors_fuel_type</code> (Required, with <code>cheapest_sensors</code>) The fuel type for which the cheapest sensors should be created. Only used if <code>cheapest_sensors</code> is true. Text \"\""},{"location":"installation/#system-configuration-options","title":"System Configuration Options","text":"Option Description Type Default <code>sources</code> (Required) A list of data sources (fuel price providers) to use. If not provided, the integration will attempt to determine the data source based on your Home Assistant configuration's country setting. Dropdown, Multiple None <code>timeout</code> (Optional) The timeout in seconds for requests to the data sources. Number (Box, Unit: s, Min: 5, Max: 60) 30 <code>scan_interval</code> (Optional) The interval in minutes between updates of the fuel prices. Number (Box, Unit: m, Min: 360, Max: 1440) 1440 <code>state_value</code> (Optional) The attribute to use for the state of the fuel price sensors. Used to select which piece of information from the source data is shown as the sensor's value (e.g., name, B7, E5, address). Text name"},{"location":"data_sources/new_zealand/finelly/","title":"Finelly Provider Set Up","text":""},{"location":"data_sources/new_zealand/finelly/#background","title":"Background","text":"<p>Finelly integration requires a user ID in order to provide fuel prices.</p>"},{"location":"data_sources/new_zealand/finelly/#retrieving-your-user-id","title":"Retrieving Your User ID","text":"<ol> <li> <p>Install the Finelly app from the App Store or Google Play Store, if you have not already.</p> </li> <li> <p>Open the app.</p> </li> <li> <p>Sign in / Sign up to the app in the most convenient way for you: using Google, Apple accounts, or email and password. \\ </p> </li> <li>Now you are on the home screen.</li> <li>Tap on the Profile menu item in the bottom navigation bar. \\ </li> <li> <p>Select Account Data. \\ </p> </li> <li> <p>Long press on your User ID and copy it. \\ </p> </li> <li> <p>Paste your User ID during the integration set up.</p> </li> </ol> <p>You are done!</p>"},{"location":"services/find_fuel_station/","title":"Find fuel stations from locations <code>find_fuel_station</code>","text":"<p>Name: Find fuel stations from location</p> <p>Description: Find all of the available fuel stations, alongside available fuels and cost for a given location. The results are not sorted.</p> <p>Fields:</p> Field Description Required Selector Type <code>location</code> The location of the area to search. Yes Location (with radius) <p>Example:</p> <pre><code>service: fuel_prices.find_fuel_station\ndata:\n  location:\n    latitude: 52.520008\n    longitude: 13.404954\n    radius: 5\n</code></pre> <p>This example would find fuel stations within a 5 mile radius of the provided coordinates.</p>"},{"location":"services/find_fuels/","title":"Find fuels from location <code>find_fuels</code>","text":"<p>Name: Find fuel prices from location</p> <p>Description: This service retrieves all fuel prices for a given location, sorted by the cheapest first.</p> <p>Fields:</p> Field Description Required Selector Type <code>location</code> The location of the area to search. Yes Location (with radius) <code>type</code> The fuel type to search for (such as E5, E10, B7, SDV). Yes Text (single line) <p>Example:</p> <pre><code>service: fuel_prices.find_fuels\ndata:\n  location:\n    latitude: 52.520008\n    longitude: 13.404954\n    radius: 10\n  type: E10\n</code></pre> <p>This example would find prices for E10 fuel within a 10-mile radius of the given latitude and longitude.</p>"},{"location":"template_examples/cheapest_n_stations/","title":"Cheapest Fuel Price Sensor","text":"<p>This YAML configuration creates a set of sensors in Home Assistant that display the price of diesel fuel (B7, this will vary depending on country / data source) at the nearest fuel stations to your home. It uses the <code>fuel_prices.find_fuels</code> service to retrieve this data and the defined <code>zone.home</code> to get the search co-oridinates.</p> <p>The template sensors will update every time HA has started, or every 12 hours.</p> <p>Radius is defined in meters, so you can use whatever unit you would like (miles, km, etc) as long as it is converted to meters.</p> <p>Change <code>zone.home</code> to another zone (or device tracker).</p>"},{"location":"template_examples/cheapest_n_stations/#configuration","title":"Configuration","text":"<p>This configuration should be placed within your <code>configuration.yaml</code> file under the <code>template</code> section.</p> <pre><code>- trigger:\n    - platform: homeassistant\n      event: start\n    - platform: time_pattern\n      hours: /12\n  action:\n    - variables:\n        fuel_type: B7\n        lat: |\n          {{ state_attr('zone.home', 'latitude') }}\n        long: |\n          {{ state_attr('zone.home', 'longitude') }}\n        radius: |\n          {{ 5 * 1609.34 }} # 5 miles converted to meters\n    - service: fuel_prices.find_fuels\n      data:\n        location:\n          latitude: |\n            {{ lat }}\n          longitude: |\n            {{ long }}\n          radius: |\n            {{ radius }}\n        type: |\n          {{ fuel_type }}\n      response_variable: data\n  sensor:\n    - name: Home Nearest Fuel Station 1\n      unique_id: Home Nearest Fuel Station 1\n      state: |\n        {{ data['fuels'][0].available_fuels[fuel_type] | float }}\n      availability: |\n        {{ data['fuels'] | count &gt; 0 }}\n      state_class: total\n      device_class: monetary\n      unit_of_measurement: |\n        {{ data['fuels'][0].currency }}\n      attributes:\n        latitude: |\n          {{ data['fuels'][0].latitude }}\n        longitude: |\n          {{ data['fuels'][0].longitude }}\n        name: |\n          {{ data['fuels'][0].name }}\n        station: |\n          {{ data['fuels'][0] }}\n    - name: Home Nearest Fuel Station 2\n      unique_id: Home Nearest Fuel Station 2\n      state: |\n        {{ data['fuels'][1].available_fuels[fuel_type] | float }}\n      availability: |\n        {{ data['fuels'] | count &gt; 1 }}\n      state_class: total\n      device_class: monetary\n      unit_of_measurement: |\n        {{ data['fuels'][0].currency }}\n      attributes:\n        latitude: |\n          {{ data['fuels'][1].latitude }}\n        longitude: |\n          {{ data['fuels'][1].longitude }}\n        name: |\n          {{ data['fuels'][1].name }}\n        station: |\n          {{ data['fuels'][1] }}\n    - name: Home Nearest Fuel Station 3\n      unique_id: Home Nearest Fuel Station 3\n      state: |\n        {{ data['fuels'][2].available_fuels[fuel_type] | float }}\n      availability: |\n        {{ data['fuels'] | count &gt; 2 }}\n      state_class: total\n      device_class: monetary\n      unit_of_measurement: |\n        {{ data['fuels'][0].currency }}\n      attributes:\n        latitude: |\n          {{ data['fuels'][2].latitude }}\n        longitude: |\n          {{ data['fuels'][2].longitude }}\n        name: |\n          {{ data['fuels'][2].name }}\n        station: |\n          {{ data['fuels'][2] }}\n</code></pre>"},{"location":"template_examples/cheapest_n_stations_device_tracker/","title":"Cheapest Fuel Price Sensor based on a device tracker","text":"<p>This YAML configuration creates a sensor in Home Assistant that displays the price of diesel fuel (B7, this will vary depending on country / data source) at the nearest fuel stations to a given device tracker. It uses the <code>fuel_prices.find_fuels</code> action to retrieve this data.</p> <p>The template sensors will update every time HA has started, or whenever your device tracker state changes.</p> <p>Radius is defined in meters, so you can use whatever unit you would like (miles, km, etc) as long as it is converted to meters.</p> <p>Change <code>sensor.device_tracker_here</code> to another device tracker.</p>"},{"location":"template_examples/cheapest_n_stations_device_tracker/#configuration","title":"Configuration","text":"<p>This configuration should be placed within your <code>configuration.yaml</code> file under the <code>template</code> section.</p> <pre><code>- trigger:\n    - platform: state\n      entity_id:\n        - sensor.device_tracker_here\n      attribute: longitude\n    - platform: state\n      entity_id:\n        - sensor.device_tracker_here\n      attribute: latitude\n    - platform: homeassistant\n      event: start\n  action:\n    - variables:\n        fuel_type: B7\n        lat: |\n          {{ state_attr('sensor.device_tracker_here', 'latitude') | float }}\n        long: |\n          {{ state_attr('sensor.device_tracker_here', 'longitude') | float }}\n        radius: |\n          {{ 5 * 1609.34 }} # 5 miles converted to meters\n    - service: fuel_prices.find_fuels\n      data:\n        location:\n          latitude: |\n            {{ lat }}\n          longitude: |\n            {{ long }}\n          radius: |\n            {{ radius }}\n        type: |\n          {{ fuel_type }}\n      response_variable: data\n  sensor:\n    - name: Device Tracker Cheapest Fuel Station\n      unique_id: Device Tracker Cheapest Fuel Station\n      state: |\n        {{ data['fuels'][0].available_fuels[fuel_type] | float }}\n      availability: |\n        {{ data['fuels'] | count &gt; 0 }}\n      state_class: total\n      device_class: monetary\n      unit_of_measurement: |\n        {{ data['fuels'][0].currency }}\n      attributes:\n        other_stations: |\n          {{ data }}\n        latitude: |\n          {{ data['fuels'][0].latitude }}\n        longitude: |\n          {{ data['fuels'][0].longitude }}\n        name: |\n          {{ data['fuels'][0].name }}\n        station: |\n          {{ data['fuels'][0] }}\n</code></pre>"}]}